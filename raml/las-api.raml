#%RAML 1.0
title: LAS (Lucidtech AI Services)
version: v0
baseUri: http://api.lucidtech.ai/{version}
mediaType: application/json
securedBy: [x-api-key]
protocols: [HTTPS]

documentation:
  - title: High-Level API Overview
    content: |
      Scanning a document with Lucidtech AI Services consists of the following steps:
      1. **PUT** on */documents* to create a document handle. The request returns a **pre-signed url** and a **document id**.
      2. **PUT** on **pre-signed url** to upload your document.
      2. **POST** on */invoices* or */receipts* with **document id** to scan your document.

      Please see below for a detailed description.
  - title: SDKs
    content: |
      List of SDKs:
      - Python SDK [(Github)](https://github.com/LucidtechAI/las-sdk-python) [(Reference)](https://docs.lucidtech.ai/python/index.html)

securitySchemes:
  x-api-key:
    type: x-custom
    description: Authentication by API key
    describedBy:
      headers:
        x-api-key:
          required: true
          type: string
      responses:
        401:
          description: Unauthorized

types:
  Field:
    type: object
    properties:
      label: string
      value: string
      confidence:
        type: number
        format: float

  ScanBody:
    type: object
    properties:
      documentId:
        type: string
        description: As returned by **PUT** on /documents
      minConfidence?:
        type: number
        format: float
    example:
      documentId: "a50920e1-214b-4c46-9137-2c03f96aad56"
      minConfidence: "0.5"

  UploadBody:
    type: object
    properties:
      documentType:
        enum: [image/jpeg, image/gif, image/png, image/bmp, application/pdf]
        description: Mime type of the document to be uploaded
      region?:
        enum: [EU]
        default: EU
        description: Specify a region for the document to be uploaded. Currently only EU is supported
    example:
      documentType: "application/pdf"
      region: "EU"

  ReceiptScan:
    type: Field[]
    minItems: 0
    uniqueItems: true
    example:
      - label: "total"
        value: "50.23"
        confidence: 0.9731
      - label: "date"
        value: "2018-07-25"
        confidence: 0.9921

  InvoiceScan:
    type: Field[]
    minItems: 0
    uniqueItems: true
    example:
      - label: "total_amount"
        value: "50.23"
        confidence: 0.9731
      - label: "payment_date"
        value: "2018-07-25"
        confidence: 0.9921

  UploadResponse:
    properties:
      uploadUrl:
        type: string
        description: |
          A pre-signed url for a **PUT** operation.

          *Content-Type* **must** match documentType provided in this request
          when **PUT**-ting to uploadUrl.

          The request body should contain binary data.

          We use Amazon s3 for fast, secure and reliable file transfer.
      documentId:
        type: string
        description: |
          A unique ephemeral document identifier. This documentId is used
          when scanning a document.
    example:
      documentId: "a50920e1-214b-4c46-9137-2c03f96aad56"
      uploadUrl: "https://eu.api.lucidtech.ai.s3.amazonaws.com/..."

/invoices:
  post:
    description: |
      #### Scan an invoice.

      Example usage:
      ```bash
      $ curl -X POST https://api.lucidtech.ai/v0/invoices \
        -H 'x-api-key: <Your api key>' \
        -H 'Content-Type: application/json' \
        -d '{"documentId": "a50920e1-214b-4c46-9137-2c03f96aad56"}'
      ```
    body:
      application/json:
        type: ScanBody
    responses:
      200:
        body:
          application/json:
            type: InvoiceScan

/receipts:
  post:
    description: |
      #### Scan a receipt.

      Example usage:
      ```bash
      $ curl -X POST https://api.lucidtech.ai/v0/receipts \
        -H 'x-api-key: <Your api key>' \
        -H 'Content-Type: application/json' \
        -d '{"documentId": "a50920e1-214b-4c46-9137-2c03f96aad56"}'
      ```
    body:
      application/json:
        type: ScanBody
    responses:
      200:
        body:
          application/json:
            type: ReceiptScan


/documents:
  put:
    description: |
      #### Create a document handle and get a pre-signed upload url.

      Example usage:
      ```bash
      $ curl -X PUT https://api.lucidtech.ai/v0/documents \
        -H 'x-api-key: <Your api key>' \
        -H 'Content-Type: application/json' \
        -d '{"documentType": "image/jpeg", "region": "EU"}'
      ```

      Upload document data to retrieved pre-signed url:
      ```bash
      $ curl -X PUT https://eu.api.lucidtech.ai.s3.amazonaws.com/... \
        -H 'Content-Type: image/jpeg' \
        -d @document.jpeg
      ```
    body:
      application/json:
        type: UploadBody
    responses:
      200:
        body:
          application/json:
            type: UploadResponse
