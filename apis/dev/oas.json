{
  "openapi": "3.0.1",
  "info": {
    "title": "Lucidtech API",
    "version": "2021-01-12T14:52:08Z"
  },
  "servers": [
    {
      "url": "https://api.lucidtech.ai/{basePath}",
      "variables": {
        "basePath": {
          "default": "/v1"
        }
      }
    }
  ],
  "paths": {
    "/": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "method.request.multivaluequerystring.status",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "method.request.querystring.status",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            },
            "description": "200 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "contentHandling": "CONVERT_TO_TEXT",
          "httpMethod": "POST",
          "passthroughBehavior": "when_no_match",
          "responses": {
            "default": {
              "statusCode": "200"
            }
          },
          "type": "aws",
          "uri": ""
        }
      }
    },
    "/assets": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "nextToken",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "maxResults",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Assets"
                }
              }
            },
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "400 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "404 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "415": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "415 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "500 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "passthroughBehavior": "never",
          "requestTemplates": {
            "application/json": "#set($body = $input.path('$'))\n{\n#if( \"$!input.params().querystring.get('maxResults')\" != \"\")\n    \"maxResults\": $input.params().querystring.get('maxResults'),\n#end\n#if( \"$!input.params().querystring.get('nextToken')\" != \"\")\n    \"nextToken\": \"$input.params().querystring.get('nextToken')\",\n#end\n    \"oauthClientId\": \"$context.authorizer.claims.client_id\",\n    \"oauthSubId\": \"$context.authorizer.claims.sub\"\n}\n"
          },
          "responses": {
            "^\\[BadRequest\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "400"
            },
            "^\\[InternalServerError\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "500"
            },
            "^\\[NotFound\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "404"
            },
            "^\\[UnsupportedMediaType\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "415"
            },
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "$input.json('$')\n"
              },
              "statusCode": "200"
            }
          },
          "type": "aws",
          "uri": ""
        },
        "x-amazon-apigateway-request-validator": ""
      },
      "options": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Empty"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            },
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\n  \"statusCode\": 200\n}\n"
          },
          "responses": {
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Methods": "'GET,POST,OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "statusCode": "200"
            }
          },
          "type": "mock"
        }
      },
      "post": {
        "parameters": [
          {
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostAssets"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Asset"
                }
              }
            },
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "400 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "404 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "415": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "415 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "500 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "passthroughBehavior": "never",
          "requestTemplates": {
            "application/json": "#set($body = $input.path('$'))\n    {\n        \"oauthClientId\": \"$context.authorizer.claims.client_id\",\n        \"oauthSubId\": \"$context.authorizer.claims.sub\",\n        #set ($jsonbody = $util.parseJson($input.json('$')))\n        #if( $jsonbody.containsKey('name') && $body.name == $null)\n            \"name\": null,\n        #elseif( $jsonbody.containsKey('name'))\n            \"name\": \"$body.name\",\n        #end\n        #if( $jsonbody.containsKey('description') && $body.description == $null)\n            \"description\": null,\n        #elseif( $jsonbody.containsKey('description'))\n            \"description\": \"$body.description\",\n        #end\n        \"content\": \"$body.content\"\n    }\n"
          },
          "responses": {
            "^\\[BadRequest\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "400"
            },
            "^\\[InternalServerError\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "500"
            },
            "^\\[NotFound\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "404"
            },
            "^\\[UnsupportedMediaType\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "415"
            },
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "$input.json('$')\n"
              },
              "statusCode": "200"
            }
          },
          "type": "aws",
          "uri": ""
        },
        "x-amazon-apigateway-request-validator": ""
      }
    },
    "/assets/{assetId}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "assetId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Asset"
                }
              }
            },
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "400 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "404 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "415": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "415 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "500 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "passthroughBehavior": "never",
          "requestTemplates": {
            "application/json": "#set($body = $input.path('$'))\n{\n    \"oauthClientId\": \"$context.authorizer.claims.client_id\",\n    \"oauthSubId\": \"$context.authorizer.claims.sub\",\n    \"assetId\": \"$input.params().path.assetId\"\n}\n"
          },
          "responses": {
            "^\\[BadRequest\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "400"
            },
            "^\\[InternalServerError\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "500"
            },
            "^\\[NotFound\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "404"
            },
            "^\\[UnsupportedMediaType\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "415"
            },
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "$input.json('$')\n"
              },
              "statusCode": "200"
            }
          },
          "type": "aws",
          "uri": ""
        },
        "x-amazon-apigateway-request-validator": ""
      },
      "options": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Empty"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            },
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\n  \"statusCode\": 200\n}\n"
          },
          "responses": {
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Methods": "'GET,PATCH,OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "statusCode": "200"
            }
          },
          "type": "mock"
        }
      },
      "patch": {
        "parameters": [
          {
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "assetId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchAssetId"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Asset"
                }
              }
            },
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "400 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "404 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "415": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "415 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "500 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "passthroughBehavior": "never",
          "requestTemplates": {
            "application/json": "#set($body = $input.path('$'))\n    {\n        \"oauthClientId\": \"$context.authorizer.claims.client_id\",\n        \"oauthSubId\": \"$context.authorizer.claims.sub\",\n        #set ($jsonbody = $util.parseJson($input.json('$')))\n    #if( $jsonbody.containsKey('name') && $body.name == $null)\n        \"name\": null,\n    #elseif( $jsonbody.containsKey('name'))\n        \"name\": \"$body.name\",\n    #end\n    #if( $jsonbody.containsKey('description') && $body.description == $null)\n        \"description\": null,\n    #elseif( $jsonbody.containsKey('description'))\n        \"description\": \"$body.description\",\n    #end\n    #if( \"$!body.content\" != \"\")\n        \"content\": \"$body.content\",\n    #end\n        \"assetId\": \"$input.params().path.assetId\"\n    }\n"
          },
          "responses": {
            "^\\[BadRequest\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "400"
            },
            "^\\[InternalServerError\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "500"
            },
            "^\\[NotFound\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "404"
            },
            "^\\[UnsupportedMediaType\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "415"
            },
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "$input.json('$')\n"
              },
              "statusCode": "200"
            }
          },
          "type": "aws",
          "uri": ""
        },
        "x-amazon-apigateway-request-validator": ""
      }
    },
    "/batches": {
      "options": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Empty"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            },
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\n  \"statusCode\": 200\n}\n"
          },
          "responses": {
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Methods": "'POST,OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "statusCode": "200"
            }
          },
          "type": "mock"
        }
      },
      "post": {
        "parameters": [
          {
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostBatches"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Batch"
                }
              }
            },
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "400 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "404 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "415": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "415 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "500 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "passthroughBehavior": "never",
          "requestTemplates": {
            "application/json": "#set($body = $input.path('$'))\n{\n    #set ($jsonbody = $util.parseJson($input.json('$')))\n    #if( $jsonbody.containsKey('name') && $body.name == $null)\n        \"name\": null,\n    #elseif( $jsonbody.containsKey('name'))\n        \"name\": \"$body.name\",\n    #end\n    #if( $jsonbody.containsKey('description') && $body.description == $null)\n        \"description\": null,\n    #elseif( $jsonbody.containsKey('description'))\n        \"description\": \"$body.description\",\n    #end\n    \"oauthClientId\": \"$context.authorizer.claims.client_id\",\n    \"oauthSubId\": \"$context.authorizer.claims.sub\"\n}\n"
          },
          "responses": {
            "^\\[BadRequest\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "400"
            },
            "^\\[InternalServerError\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "500"
            },
            "^\\[NotFound\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "404"
            },
            "^\\[UnsupportedMediaType\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "415"
            },
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "$input.json('$')\n"
              },
              "statusCode": "200"
            }
          },
          "type": "aws",
          "uri": ""
        },
        "x-amazon-apigateway-request-validator": ""
      }
    },
    "/documents": {
      "delete": {
        "parameters": [
          {
            "in": "query",
            "name": "consentId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Documents"
                }
              }
            },
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "400 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "404 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "415": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "415 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "500 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "passthroughBehavior": "never",
          "requestTemplates": {
            "application/json": "{\n#if( \"$!input.params().querystring.get('consentId')\" != \"\")\n    \"consentId\": [\n    #foreach( $consentId in $method.request.multivaluequerystring.consentId )\n        \"$consentId\"#if( $foreach.hasNext ),#end\n    #end\n    ],\n#end\n    \"oauthClientId\": \"$context.authorizer.claims.client_id\",\n    \"oauthSubId\": \"$context.authorizer.claims.sub\"\n}\n"
          },
          "responses": {
            "^\\[BadRequest\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "400"
            },
            "^\\[InternalServerError\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "500"
            },
            "^\\[NotFound\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "404"
            },
            "^\\[UnsupportedMediaType\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "415"
            },
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "$input.json('$')\n"
              },
              "statusCode": "200"
            }
          },
          "type": "aws",
          "uri": ""
        },
        "x-amazon-apigateway-request-validator": ""
      },
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "batchId",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "consentId",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "nextToken",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "maxResults",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Documents"
                }
              }
            },
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "400 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "404 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "415": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "415 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "500 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "passthroughBehavior": "never",
          "requestTemplates": {
            "application/json": "#set($body = $input.path('$'))\n{\n#if( \"$!input.params().querystring.get('batchId')\" != \"\")\n    \"batchId\": [\n    #foreach( $status in $method.request.multivaluequerystring.batchId )\n        \"$status\"#if( $foreach.hasNext ),#end\n    #end\n    ],\n#end\n#if( \"$!input.params().querystring.get('consentId')\" != \"\")\n    \"consentId\": [\n    #foreach( $consentId in $method.request.multivaluequerystring.consentId )\n        \"$consentId\"#if( $foreach.hasNext ),#end\n    #end\n    ],\n#end\n#if( \"$!input.params().querystring.get('maxResults')\" != \"\")\n    \"maxResults\": $input.params().querystring.get('maxResults'),\n#end\n#if( \"$!input.params().querystring.get('nextToken')\" != \"\")\n    \"nextToken\": \"$input.params().querystring.get('nextToken')\",\n#end\n    \"oauthClientId\": \"$context.authorizer.claims.client_id\",\n    \"oauthSubId\": \"$context.authorizer.claims.sub\"\n}\n"
          },
          "responses": {
            "^\\[BadRequest\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "400"
            },
            "^\\[InternalServerError\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "500"
            },
            "^\\[NotFound\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "404"
            },
            "^\\[UnsupportedMediaType\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "415"
            },
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "$input.json('$')\n"
              },
              "statusCode": "200"
            }
          },
          "type": "aws",
          "uri": ""
        },
        "x-amazon-apigateway-request-validator": ""
      },
      "options": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Empty"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            },
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\n  \"statusCode\": 200\n}\n"
          },
          "responses": {
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Methods": "'GET,POST,DELETE,OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "statusCode": "200"
            }
          },
          "type": "mock"
        }
      },
      "post": {
        "parameters": [
          {
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostDocuments"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Document"
                }
              }
            },
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "400 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "404 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "415": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "415 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "500 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "passthroughBehavior": "never",
          "requestTemplates": {
            "application/json": "#set($body = $input.path('$'))\n    {\n        \"oauthClientId\": \"$context.authorizer.claims.client_id\",\n        \"oauthSubId\": \"$context.authorizer.claims.sub\",\n    #if( \"$!body.batchId\" != \"\")\n        \"batchId\": \"$body.batchId\",\n    #end\n    #if( \"$!body.groundTruth\" != \"\")\n        \"groundTruth\": $body.groundTruth,\n    #end\n    #if( \"$!body.consentId\" != \"\")\n        \"consentId\": \"$body.consentId\",\n    #end\n        \"contentType\": \"$body.contentType\",\n        \"content\": \"$body.content\"\n    }\n"
          },
          "responses": {
            "^\\[BadRequest\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "400"
            },
            "^\\[InternalServerError\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "500"
            },
            "^\\[NotFound\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "404"
            },
            "^\\[UnsupportedMediaType\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "415"
            },
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "$input.json('$')\n"
              },
              "statusCode": "200"
            }
          },
          "type": "aws",
          "uri": ""
        },
        "x-amazon-apigateway-request-validator": ""
      }
    },
    "/documents/{documentId}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "documentId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Document"
                }
              }
            },
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "400 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "404 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "415": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "415 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "500 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "passthroughBehavior": "never",
          "requestTemplates": {
            "application/json": "#set($body = $input.path('$'))\n{\n    \"oauthClientId\": \"$context.authorizer.claims.client_id\",\n    \"oauthSubId\": \"$context.authorizer.claims.sub\",\n    \"documentId\": \"$input.params().path.documentId\"\n}\n"
          },
          "responses": {
            "^\\[BadRequest\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "400"
            },
            "^\\[InternalServerError\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "500"
            },
            "^\\[NotFound\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "404"
            },
            "^\\[UnsupportedMediaType\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "415"
            },
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "$input.json('$')\n"
              },
              "statusCode": "200"
            }
          },
          "type": "aws",
          "uri": ""
        },
        "x-amazon-apigateway-request-validator": ""
      },
      "options": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Empty"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            },
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\n  \"statusCode\": 200\n}\n"
          },
          "responses": {
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Methods": "'GET,PATCH,OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "statusCode": "200"
            }
          },
          "type": "mock"
        }
      },
      "patch": {
        "parameters": [
          {
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "documentId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchDocumentId"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Document"
                }
              }
            },
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "400 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "404 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "415": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "415 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "500 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "passthroughBehavior": "never",
          "requestTemplates": {
            "application/json": "#set($body = $input.path('$'))\n{\n    \"oauthClientId\": \"$context.authorizer.claims.client_id\",\n    \"oauthSubId\": \"$context.authorizer.claims.sub\",\n    \"documentId\": \"$input.params().path.documentId\",\n    \"groundTruth\": $input.json('$.groundTruth')\n}\n"
          },
          "responses": {
            "^\\[BadRequest\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "400"
            },
            "^\\[InternalServerError\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "500"
            },
            "^\\[NotFound\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "404"
            },
            "^\\[UnsupportedMediaType\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "415"
            },
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "$input.json('$')\n"
              },
              "statusCode": "200"
            }
          },
          "type": "aws",
          "uri": ""
        },
        "x-amazon-apigateway-request-validator": ""
      }
    },
    "/logs": {
      "options": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Empty"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            },
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\n  \"statusCode\": 200\n}\n"
          },
          "responses": {
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "statusCode": "200"
            }
          },
          "type": "mock"
        }
      }
    },
    "/logs/{logId}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "logId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Log"
                }
              }
            },
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "400 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "404 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "415": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "415 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "500 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "passthroughBehavior": "never",
          "requestTemplates": {
            "application/json": "#set($body = $input.path('$'))\n{\n    \"oauthClientId\": \"$context.authorizer.claims.client_id\",\n    \"oauthSubId\": \"$context.authorizer.claims.sub\",\n    \"logId\": \"$input.params().path.logId\"\n}\n"
          },
          "responses": {
            "^\\[BadRequest\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "400"
            },
            "^\\[InternalServerError\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "500"
            },
            "^\\[NotFound\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "404"
            },
            "^\\[UnsupportedMediaType\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "415"
            },
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "$input.json('$')\n"
              },
              "statusCode": "200"
            }
          },
          "type": "aws",
          "uri": ""
        },
        "x-amazon-apigateway-request-validator": ""
      },
      "options": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Empty"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            },
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\n  \"statusCode\": 200\n}\n"
          },
          "responses": {
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "statusCode": "200"
            }
          },
          "type": "mock"
        }
      }
    },
    "/models": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "nextToken",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "maxResults",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Models"
                }
              }
            },
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "400 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "404 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "415": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "415 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "500 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "passthroughBehavior": "never",
          "requestTemplates": {
            "application/json": "#set($body = $input.path('$'))\n{\n#if( \"$!input.params().querystring.get('maxResults')\" != \"\")\n    \"maxResults\": $input.params().querystring.get('maxResults'),\n#end\n#if( \"$!input.params().querystring.get('nextToken')\" != \"\")\n    \"nextToken\": \"$input.params().querystring.get('nextToken')\",\n#end\n    \"oauthClientId\": \"$context.authorizer.claims.client_id\",\n    \"oauthSubId\": \"$context.authorizer.claims.sub\"\n}\n"
          },
          "responses": {
            "^\\[BadRequest\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "400"
            },
            "^\\[InternalServerError\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "500"
            },
            "^\\[NotFound\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "404"
            },
            "^\\[UnsupportedMediaType\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "415"
            },
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "$input.json('$')\n"
              },
              "statusCode": "200"
            }
          },
          "type": "aws",
          "uri": ""
        },
        "x-amazon-apigateway-request-validator": ""
      },
      "options": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Empty"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            },
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\n  \"statusCode\": 200\n}\n"
          },
          "responses": {
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "statusCode": "200"
            }
          },
          "type": "mock"
        }
      }
    },
    "/predictions": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "nextToken",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "maxResults",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Prediction"
                }
              }
            },
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "400 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "404 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "415": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "415 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "500 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "passthroughBehavior": "never",
          "requestTemplates": {
            "application/json": "#set($body = $input.path('$'))\n{\n#if( \"$!input.params().querystring.get('maxResults')\" != \"\")\n    \"maxResults\": $input.params().querystring.get('maxResults'),\n#end\n#if( \"$!input.params().querystring.get('nextToken')\" != \"\")\n    \"nextToken\": \"$input.params().querystring.get('nextToken')\",\n#end\n    \"oauthClientId\": \"$context.authorizer.claims.client_id\",\n    \"oauthSubId\": \"$context.authorizer.claims.sub\"\n}\n"
          },
          "responses": {
            "^\\[BadRequest\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "400"
            },
            "^\\[InternalServerError\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "500"
            },
            "^\\[NotFound\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "404"
            },
            "^\\[UnsupportedMediaType\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "415"
            },
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "$input.json('$')\n"
              },
              "statusCode": "200"
            }
          },
          "type": "aws",
          "uri": ""
        },
        "x-amazon-apigateway-request-validator": ""
      },
      "options": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Empty"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            },
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\n  \"statusCode\": 200\n}\n"
          },
          "responses": {
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Methods": "'GET,POST,OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "statusCode": "200"
            }
          },
          "type": "mock"
        }
      },
      "post": {
        "parameters": [
          {
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostPredictions"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Prediction"
                }
              }
            },
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "400 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "404 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "415": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "415 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "500 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "passthroughBehavior": "never",
          "requestTemplates": {
            "application/json": "#set($body = $input.path('$'))\n{\n    \"oauthClientId\": \"$context.authorizer.claims.client_id\",\n    \"oauthSubId\": \"$context.authorizer.claims.sub\",\n#if( \"$!body.autoRotate\" != \"\")\n    \"autoRotate\": $body.autoRotate,\n#end\n#if( \"$!body.maxPages\" != \"\")\n    \"maxPages\": $body.maxPages,\n#end\n    \"modelId\": \"$body.modelId\",\n    \"documentId\": \"$body.documentId\"\n}\n"
          },
          "responses": {
            "^\\[BadRequest\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "400"
            },
            "^\\[InternalServerError\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "500"
            },
            "^\\[NotFound\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "404"
            },
            "^\\[UnsupportedMediaType\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "415"
            },
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "$input.json('$')\n"
              },
              "statusCode": "200"
            }
          },
          "type": "aws",
          "uri": ""
        },
        "x-amazon-apigateway-request-validator": ""
      }
    },
    "/secrets": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "nextToken",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "maxResults",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Secrets"
                }
              }
            },
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "400 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "404 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "415": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "415 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "500 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "passthroughBehavior": "never",
          "requestTemplates": {
            "application/json": "#set($body = $input.path('$'))\n{\n#if( \"$!input.params().querystring.get('maxResults')\" != \"\")\n    \"maxResults\": $input.params().querystring.get('maxResults'),\n#end\n#if( \"$!input.params().querystring.get('nextToken')\" != \"\")\n    \"nextToken\": \"$input.params().querystring.get('nextToken')\",\n#end\n    \"oauthClientId\": \"$context.authorizer.claims.client_id\",\n    \"oauthSubId\": \"$context.authorizer.claims.sub\"\n}\n"
          },
          "responses": {
            "^\\[BadRequest\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "400"
            },
            "^\\[InternalServerError\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "500"
            },
            "^\\[NotFound\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "404"
            },
            "^\\[UnsupportedMediaType\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "415"
            },
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "$input.json('$')\n"
              },
              "statusCode": "200"
            }
          },
          "type": "aws",
          "uri": ""
        },
        "x-amazon-apigateway-request-validator": ""
      },
      "options": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Empty"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            },
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\n  \"statusCode\": 200\n}\n"
          },
          "responses": {
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Methods": "'POST,GET,OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "statusCode": "200"
            }
          },
          "type": "mock"
        }
      },
      "post": {
        "parameters": [
          {
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostSecrets"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Secret"
                }
              }
            },
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "400 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "404 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "415": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "415 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "500 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "passthroughBehavior": "never",
          "requestTemplates": {
            "application/json": "#set($body = $input.path('$'))\n    {\n        #set ($jsonbody = $util.parseJson($input.json('$')))\n        #if( $jsonbody.containsKey('name') && $body.name == $null)\n            \"name\": null,\n        #elseif( $jsonbody.containsKey('name'))\n            \"name\": \"$body.name\",\n        #end\n        #if( $jsonbody.containsKey('description') && $body.description == $null)\n            \"description\": null,\n        #elseif( $jsonbody.containsKey('description'))\n            \"description\": \"$body.description\",\n        #end\n        \"oauthClientId\": \"$context.authorizer.claims.client_id\",\n        \"oauthSubId\": \"$context.authorizer.claims.sub\",\n        \"data\": $input.json('$.data')\n    }\n"
          },
          "responses": {
            "^\\[BadRequest\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "400"
            },
            "^\\[InternalServerError\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "500"
            },
            "^\\[NotFound\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "404"
            },
            "^\\[UnsupportedMediaType\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "415"
            },
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "$input.json('$')\n"
              },
              "statusCode": "200"
            }
          },
          "type": "aws",
          "uri": ""
        },
        "x-amazon-apigateway-request-validator": ""
      }
    },
    "/secrets/{secretId}": {
      "options": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Empty"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            },
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\n  \"statusCode\": 200\n}\n"
          },
          "responses": {
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Methods": "'PATCH,OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "statusCode": "200"
            }
          },
          "type": "mock"
        }
      },
      "patch": {
        "parameters": [
          {
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "secretId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchSecretId"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Secret"
                }
              }
            },
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "400 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "404 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "415": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "415 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "500 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "passthroughBehavior": "never",
          "requestTemplates": {
            "application/json": "#set($body = $input.path('$'))\n    {\n        \"oauthClientId\": \"$context.authorizer.claims.client_id\",\n        \"oauthSubId\": \"$context.authorizer.claims.sub\",\n        #set ($jsonbody = $util.parseJson($input.json('$')))\n        #if( $jsonbody.containsKey('name') && $body.name == $null)\n            \"name\": null,\n        #elseif( $jsonbody.containsKey('name'))\n            \"name\": \"$body.name\",\n        #end\n        #if( $jsonbody.containsKey('description') && $body.description == $null)\n            \"description\": null,\n        #elseif( $jsonbody.containsKey('description'))\n            \"description\": \"$body.description\",\n        #end\n    #if( \"$!body.data\" != \"\")\n        \"data\": $input.json('$.data'),\n    #end\n        \"secretId\": \"$input.params().path.secretId\"\n    }\n"
          },
          "responses": {
            "^\\[BadRequest\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "400"
            },
            "^\\[InternalServerError\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "500"
            },
            "^\\[NotFound\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "404"
            },
            "^\\[UnsupportedMediaType\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "415"
            },
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "$input.json('$')\n"
              },
              "statusCode": "200"
            }
          },
          "type": "aws",
          "uri": ""
        },
        "x-amazon-apigateway-request-validator": ""
      }
    },
    "/transitions": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "transitionType",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "nextToken",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "maxResults",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transitions"
                }
              }
            },
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "400 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "404 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "415": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "415 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "500 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "passthroughBehavior": "never",
          "requestTemplates": {
            "application/json": "{\n#if( \"$!input.params().querystring.get('transitionType')\" != \"\")\n    \"transitionType\": [\n    #foreach( $transitionType in $method.request.multivaluequerystring.transitionType )\n        \"$transitionType\"#if( $foreach.hasNext ),#end\n    #end\n    ],\n#end\n#if( \"$!input.params().querystring.get('maxResults')\" != \"\")\n    \"maxResults\": $input.params().querystring.get('maxResults'),\n#end\n#if( \"$!input.params().querystring.get('nextToken')\" != \"\")\n    \"nextToken\": \"$input.params().querystring.get('nextToken')\",\n#end\n    \"oauthClientId\": \"$context.authorizer.claims.client_id\",\n    \"oauthSubId\": \"$context.authorizer.claims.sub\"\n}\n"
          },
          "responses": {
            "^\\[BadRequest\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "400"
            },
            "^\\[InternalServerError\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "500"
            },
            "^\\[NotFound\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "404"
            },
            "^\\[UnsupportedMediaType\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "415"
            },
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "$input.json('$')\n"
              },
              "statusCode": "200"
            }
          },
          "type": "aws",
          "uri": ""
        },
        "x-amazon-apigateway-request-validator": ""
      },
      "options": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Empty"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            },
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\n  \"statusCode\": 200\n}\n"
          },
          "responses": {
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Methods": "'POST,GET,OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "statusCode": "200"
            }
          },
          "type": "mock"
        }
      },
      "post": {
        "parameters": [
          {
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostTransitions"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transition"
                }
              }
            },
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "400 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "404 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "415": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "415 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "500 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "passthroughBehavior": "never",
          "requestTemplates": {
            "application/json": "#set($body = $input.path('$'))\n{\n    \"oauthClientId\": \"$context.authorizer.claims.client_id\",\n    \"oauthSubId\": \"$context.authorizer.claims.sub\",\n    #set ($jsonbody = $util.parseJson($input.json('$')))\n    #if( $jsonbody.containsKey('name') && $body.name == $null)\n        \"name\": null,\n    #elseif( $jsonbody.containsKey('name'))\n        \"name\": \"$body.name\",\n    #end\n    #if( $jsonbody.containsKey('description') && $body.description == $null)\n        \"description\": null,\n    #elseif( $jsonbody.containsKey('description'))\n        \"description\": \"$body.description\",\n    #end\n#if( \"$!body.parameters\" != \"\")\n    \"parameters\": $input.json('$.parameters'),\n#end\n#if( \"$body.inputJsonSchema\" != \"\")\n    \"inputJsonSchema\": $input.json('$.inputJsonSchema'),\n#end\n#if( \"$body.outputJsonSchema\" != \"\")\n    \"outputJsonSchema\": $input.json('$.outputJsonSchema'),\n#end\n    \"transitionType\": \"$body.transitionType\"\n}\n"
          },
          "responses": {
            "^\\[BadRequest\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "400"
            },
            "^\\[InternalServerError\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "500"
            },
            "^\\[NotFound\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "404"
            },
            "^\\[UnsupportedMediaType\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "415"
            },
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "$input.json('$')\n"
              },
              "statusCode": "200"
            }
          },
          "type": "aws",
          "uri": ""
        },
        "x-amazon-apigateway-request-validator": ""
      }
    },
    "/transitions/{transitionId}": {
      "options": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Empty"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            },
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\n  \"statusCode\": 200\n}\n"
          },
          "responses": {
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Methods": "'PATCH,OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "statusCode": "200"
            }
          },
          "type": "mock"
        }
      },
      "patch": {
        "parameters": [
          {
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "transitionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchTransitionId"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transition"
                }
              }
            },
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "400 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "404 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "415": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "415 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "500 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "passthroughBehavior": "never",
          "requestTemplates": {
            "application/json": "#set($body = $input.path('$'))\n{\n    \"oauthClientId\": \"$context.authorizer.claims.client_id\",\n    \"oauthSubId\": \"$context.authorizer.claims.sub\",\n    #set ($jsonbody = $util.parseJson($input.json('$')))\n    #if( $jsonbody.containsKey('name') && $body.name == $null)\n        \"name\": null,\n    #elseif( $jsonbody.containsKey('name'))\n        \"name\": \"$body.name\",\n    #end\n    #if( $jsonbody.containsKey('description') && $body.description == $null)\n        \"description\": null,\n    #elseif( $jsonbody.containsKey('description'))\n        \"description\": \"$body.description\",\n    #end\n#if( \"$body.inputJsonSchema\" != \"\")\n    \"inputJsonSchema\": $input.json('$.inputJsonSchema'),\n#end\n#if( \"$body.outputJsonSchema\" != \"\")\n    \"outputJsonSchema\": $input.json('$.outputJsonSchema'),\n#end\n    \"transitionId\": \"$input.params().path.transitionId\"\n}\n"
          },
          "responses": {
            "^\\[BadRequest\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "400"
            },
            "^\\[InternalServerError\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "500"
            },
            "^\\[NotFound\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "404"
            },
            "^\\[UnsupportedMediaType\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "415"
            },
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "$input.json('$')\n"
              },
              "statusCode": "200"
            }
          },
          "type": "aws",
          "uri": ""
        },
        "x-amazon-apigateway-request-validator": ""
      }
    },
    "/transitions/{transitionId}/executions": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "nextToken",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "order",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "executionId",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "transitionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "maxResults",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransitionExecutions"
                }
              }
            },
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "400 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "404 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "415": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "415 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "500 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "passthroughBehavior": "never",
          "requestTemplates": {
            "application/json": "#set($body = $input.path('$'))\n{\n    \"transitionId\": \"$input.params().path.transitionId\",\n#if( \"$!input.params().querystring.get('status')\" != \"\")\n    \"status\": [\n    #foreach( $status in $method.request.multivaluequerystring.status )\n        \"$status\"#if( $foreach.hasNext ),#end\n    #end\n    ],\n#end\n#if( \"$!input.params().querystring.get('executionId')\" != \"\")\n    \"executionId\": [\n    #foreach( $executionId in $method.request.multivaluequerystring.executionId )\n        \"$executionId\"#if( $foreach.hasNext ),#end\n    #end\n    ],\n#end\n#if( \"$!input.params().querystring.get('sortBy')\" != \"\")\n    \"sortBy\": \"$input.params().querystring.get('sortBy')\",\n#end\n#if( \"$!input.params().querystring.get('order')\" != \"\")\n    \"order\": \"$input.params().querystring.get('order')\",\n#end\n#if( \"$!input.params().querystring.get('maxResults')\" != \"\")\n    \"maxResults\": $input.params().querystring.get('maxResults'),\n#end\n#if( \"$!input.params().querystring.get('nextToken')\" != \"\")\n    \"nextToken\": \"$input.params().querystring.get('nextToken')\",\n#end\n    \"oauthClientId\": \"$context.authorizer.claims.client_id\",\n    \"oauthSubId\": \"$context.authorizer.claims.sub\"\n}\n"
          },
          "responses": {
            "^\\[BadRequest\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "400"
            },
            "^\\[InternalServerError\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "500"
            },
            "^\\[NotFound\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "404"
            },
            "^\\[UnsupportedMediaType\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "415"
            },
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "$input.json('$')\n"
              },
              "statusCode": "200"
            }
          },
          "type": "aws",
          "uri": ""
        },
        "x-amazon-apigateway-request-validator": ""
      },
      "options": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Empty"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            },
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\n  \"statusCode\": 200\n}\n"
          },
          "responses": {
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Methods": "'POST,GET,OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "statusCode": "200"
            }
          },
          "type": "mock"
        }
      },
      "post": {
        "parameters": [
          {
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "transitionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostTransitionExecution"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransitionExecution"
                }
              }
            },
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "400 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "404 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "415": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "415 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "500 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "passthroughBehavior": "never",
          "requestTemplates": {
            "application/json": "#set($body = $input.path('$'))\n    {\n        \"oauthClientId\": \"$context.authorizer.claims.client_id\",\n        \"oauthSubId\": \"$context.authorizer.claims.sub\",\n        \"transitionId\": \"$input.params().path.transitionId\"\n    }\n"
          },
          "responses": {
            "^\\[BadRequest\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "400"
            },
            "^\\[InternalServerError\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "500"
            },
            "^\\[NotFound\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "404"
            },
            "^\\[UnsupportedMediaType\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "415"
            },
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "$input.json('$')\n"
              },
              "statusCode": "200"
            }
          },
          "type": "aws",
          "uri": ""
        },
        "x-amazon-apigateway-request-validator": ""
      }
    },
    "/transitions/{transitionId}/executions/{executionId}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "transitionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "executionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransitionExecution"
                }
              }
            },
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "400 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "404 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "415": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "415 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "500 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "passthroughBehavior": "never",
          "requestTemplates": {
            "application/json": "#set($body = $input.path('$'))\n{\n    \"oauthClientId\": \"$context.authorizer.claims.client_id\",\n    \"oauthSubId\": \"$context.authorizer.claims.sub\",\n    \"transitionId\": \"$input.params().path.transitionId\",\n    \"executionId\": \"$input.params().path.executionId\"\n}\n"
          },
          "responses": {
            "^\\[BadRequest\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "400"
            },
            "^\\[InternalServerError\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "500"
            },
            "^\\[NotFound\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "404"
            },
            "^\\[UnsupportedMediaType\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "415"
            },
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "$input.json('$')\n"
              },
              "statusCode": "200"
            }
          },
          "type": "aws",
          "uri": ""
        },
        "x-amazon-apigateway-request-validator": ""
      },
      "options": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Empty"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            },
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\n  \"statusCode\": 200\n}\n"
          },
          "responses": {
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Methods": "'PATCH,GET,OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "statusCode": "200"
            }
          },
          "type": "mock"
        }
      },
      "patch": {
        "parameters": [
          {
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "transitionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "executionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchTransistionExecutionId"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransitionExecution"
                }
              }
            },
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "400 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "404 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "415": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "415 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "500 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "passthroughBehavior": "never",
          "requestTemplates": {
            "application/json": "#set($body = $input.path('$'))\n{\n    \"oauthClientId\": \"$context.authorizer.claims.client_id\",\n    \"oauthSubId\": \"$context.authorizer.claims.sub\",\n#if( \"$!body.output\" != \"\")\n    \"output\": $input.json('$.output'),\n#end\n#if( \"$!body.error\" != \"\")\n    \"error\": $input.json('$.error'),\n#end\n#if( \"$!body.status\" != \"\")\n    \"status\": \"$body.status\",\n#end\n    \"executionId\": \"$input.params().path.executionId\",\n    \"transitionId\": \"$input.params().path.transitionId\"\n}\n"
          },
          "responses": {
            "^\\[BadRequest\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "400"
            },
            "^\\[InternalServerError\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "500"
            },
            "^\\[NotFound\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "404"
            },
            "^\\[UnsupportedMediaType\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "415"
            },
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "$input.json('$')\n"
              },
              "statusCode": "200"
            }
          },
          "type": "aws",
          "uri": ""
        },
        "x-amazon-apigateway-request-validator": ""
      }
    },
    "/users": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "nextToken",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "maxResults",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Users"
                }
              }
            },
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "400 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "404 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "415": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "415 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "500 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "passthroughBehavior": "never",
          "requestTemplates": {
            "application/json": "#set($body = $input.path('$'))\n{\n#if( \"$!input.params().querystring.get('maxResults')\" != \"\")\n    \"maxResults\": $input.params().querystring.get('maxResults'),\n#end\n#if( \"$!input.params().querystring.get('nextToken')\" != \"\")\n    \"nextToken\": \"$input.params().querystring.get('nextToken')\",\n#end\n    \"oauthClientId\": \"$context.authorizer.claims.client_id\",\n    \"oauthSubId\": \"$context.authorizer.claims.sub\"\n}\n"
          },
          "responses": {
            "^\\[BadRequest\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "400"
            },
            "^\\[InternalServerError\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "500"
            },
            "^\\[NotFound\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "404"
            },
            "^\\[UnsupportedMediaType\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "415"
            },
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "$input.json('$')\n"
              },
              "statusCode": "200"
            }
          },
          "type": "aws",
          "uri": ""
        },
        "x-amazon-apigateway-request-validator": ""
      },
      "options": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Empty"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            },
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\n  \"statusCode\": 200\n}\n"
          },
          "responses": {
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Methods": "'GET,POST,OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "statusCode": "200"
            }
          },
          "type": "mock"
        }
      },
      "post": {
        "parameters": [
          {
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostUsers"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "400 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "404 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "415": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "415 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "500 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "passthroughBehavior": "never",
          "requestTemplates": {
            "application/json": "#set($body = $input.path('$'))\n    {\n        \"oauthClientId\": \"$context.authorizer.claims.client_id\",\n        \"oauthSubId\": \"$context.authorizer.claims.sub\",\n        \"email\": \"$body.email\"\n    }\n"
          },
          "responses": {
            "^\\[BadRequest\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "400"
            },
            "^\\[InternalServerError\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "500"
            },
            "^\\[NotFound\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "404"
            },
            "^\\[UnsupportedMediaType\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "415"
            },
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "$input.json('$')\n"
              },
              "statusCode": "200"
            }
          },
          "type": "aws",
          "uri": ""
        },
        "x-amazon-apigateway-request-validator": ""
      }
    },
    "/users/{userId}": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "400 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "404 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "415": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "415 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "500 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "passthroughBehavior": "never",
          "requestTemplates": {
            "application/json": "#set($body = $input.path('$'))\n{\n    \"oauthClientId\": \"$context.authorizer.claims.client_id\",\n    \"oauthSubId\": \"$context.authorizer.claims.sub\",\n    \"userId\": \"$input.params().path.userId\"\n}\n"
          },
          "responses": {
            "^\\[BadRequest\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "400"
            },
            "^\\[InternalServerError\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "500"
            },
            "^\\[NotFound\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "404"
            },
            "^\\[UnsupportedMediaType\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "415"
            },
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "$input.json('$')\n"
              },
              "statusCode": "200"
            }
          },
          "type": "aws",
          "uri": ""
        },
        "x-amazon-apigateway-request-validator": ""
      },
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "400 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "404 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "415": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "415 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "500 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "passthroughBehavior": "never",
          "requestTemplates": {
            "application/json": "#set($body = $input.path('$'))\n{\n    \"oauthClientId\": \"$context.authorizer.claims.client_id\",\n    \"oauthSubId\": \"$context.authorizer.claims.sub\",\n    \"userId\": \"$input.params().path.userId\"\n}\n"
          },
          "responses": {
            "^\\[BadRequest\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "400"
            },
            "^\\[InternalServerError\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "500"
            },
            "^\\[NotFound\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "404"
            },
            "^\\[UnsupportedMediaType\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "415"
            },
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "$input.json('$')\n"
              },
              "statusCode": "200"
            }
          },
          "type": "aws",
          "uri": ""
        },
        "x-amazon-apigateway-request-validator": ""
      },
      "options": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Empty"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            },
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\n  \"statusCode\": 200\n}\n"
          },
          "responses": {
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Methods": "'GET,DELETE,OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "statusCode": "200"
            }
          },
          "type": "mock"
        }
      }
    },
    "/workflows": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "nextToken",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "maxResults",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workflows"
                }
              }
            },
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "400 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "404 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "415": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "415 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "500 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "passthroughBehavior": "never",
          "requestTemplates": {
            "application/json": "#set($body = $input.path('$'))\n{\n#if( \"$!input.params().querystring.get('maxResults')\" != \"\")\n    \"maxResults\": $input.params().querystring.get('maxResults'),\n#end\n#if( \"$!input.params().querystring.get('nextToken')\" != \"\")\n    \"nextToken\": \"$input.params().querystring.get('nextToken')\",\n#end\n    \"oauthClientId\": \"$context.authorizer.claims.client_id\",\n    \"oauthSubId\": \"$context.authorizer.claims.sub\"\n}\n"
          },
          "responses": {
            "^\\[BadRequest\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "400"
            },
            "^\\[InternalServerError\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "500"
            },
            "^\\[NotFound\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "404"
            },
            "^\\[UnsupportedMediaType\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "415"
            },
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "$input.json('$')\n"
              },
              "statusCode": "200"
            }
          },
          "type": "aws",
          "uri": ""
        },
        "x-amazon-apigateway-request-validator": ""
      },
      "options": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Empty"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            },
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\n  \"statusCode\": 200\n}\n"
          },
          "responses": {
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Methods": "'POST,GET,OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "statusCode": "200"
            }
          },
          "type": "mock"
        }
      },
      "post": {
        "parameters": [
          {
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostWorkflows"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workflow"
                }
              }
            },
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "400 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "404 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "415": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "415 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "500 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "passthroughBehavior": "never",
          "requestTemplates": {
            "application/json": "#set($body = $input.path('$'))\n{\n    \"oauthClientId\": \"$context.authorizer.claims.client_id\",\n    \"oauthSubId\": \"$context.authorizer.claims.sub\",\n    #set ($jsonbody = $util.parseJson($input.json('$')))\n    #if( $jsonbody.containsKey('name') && $body.name == $null)\n        \"name\": null,\n    #elseif( $jsonbody.containsKey('name'))\n        \"name\": \"$body.name\",\n    #end\n    #if( $jsonbody.containsKey('description') && $body.description == $null)\n        \"description\": null,\n    #elseif( $jsonbody.containsKey('description'))\n        \"description\": \"$body.description\",\n    #end\n#if( \"$!body.errorConfig\" != \"\")\n    \"errorConfig\": $input.json('$.errorConfig'),\n#end\n    \"specification\": $input.json('$.specification')\n}\n"
          },
          "responses": {
            "^\\[BadRequest\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "400"
            },
            "^\\[InternalServerError\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "500"
            },
            "^\\[NotFound\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "404"
            },
            "^\\[UnsupportedMediaType\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "415"
            },
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "$input.json('$')\n"
              },
              "statusCode": "200"
            }
          },
          "type": "aws",
          "uri": ""
        },
        "x-amazon-apigateway-request-validator": ""
      }
    },
    "/workflows/{workflowId}": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "workflowId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workflow"
                }
              }
            },
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "400 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "404 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "415": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "415 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "500 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "passthroughBehavior": "never",
          "requestTemplates": {
            "application/json": "{\n    \"oauthClientId\": \"$context.authorizer.claims.client_id\",\n    \"oauthSubId\": \"$context.authorizer.claims.sub\",\n    \"workflowId\": \"$input.params().path.workflowId\"\n}\n"
          },
          "responses": {
            "^\\[BadRequest\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "400"
            },
            "^\\[InternalServerError\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "500"
            },
            "^\\[NotFound\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "404"
            },
            "^\\[UnsupportedMediaType\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "415"
            },
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "$input.json('$')\n"
              },
              "statusCode": "200"
            }
          },
          "type": "aws",
          "uri": ""
        },
        "x-amazon-apigateway-request-validator": ""
      },
      "options": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Empty"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            },
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\n  \"statusCode\": 200\n}\n"
          },
          "responses": {
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Methods": "'DELETE,PATCH,OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "statusCode": "200"
            }
          },
          "type": "mock"
        }
      },
      "patch": {
        "parameters": [
          {
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "workflowId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchWorkflowId"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workflow"
                }
              }
            },
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "400 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "404 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "415": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "415 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "500 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "passthroughBehavior": "never",
          "requestTemplates": {
            "application/json": "#set($body = $input.path('$'))\n{\n    \"oauthClientId\": \"$context.authorizer.claims.client_id\",\n    \"oauthSubId\": \"$context.authorizer.claims.sub\",\n    #set ($jsonbody = $util.parseJson($input.json('$')))\n    #if( $jsonbody.containsKey('name') && $body.name == $null)\n        \"name\": null,\n    #elseif( $jsonbody.containsKey('name'))\n        \"name\": \"$body.name\",\n    #end\n    #if( $jsonbody.containsKey('description') && $body.description == $null)\n        \"description\": null,\n    #elseif( $jsonbody.containsKey('description'))\n        \"description\": \"$body.description\",\n    #end\n    \"workflowId\": \"$input.params().path.workflowId\"\n}\n"
          },
          "responses": {
            "^\\[BadRequest\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "400"
            },
            "^\\[InternalServerError\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "500"
            },
            "^\\[NotFound\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "404"
            },
            "^\\[UnsupportedMediaType\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "415"
            },
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "$input.json('$')\n"
              },
              "statusCode": "200"
            }
          },
          "type": "aws",
          "uri": ""
        },
        "x-amazon-apigateway-request-validator": ""
      }
    },
    "/workflows/{workflowId}/executions": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "workflowId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "nextToken",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "maxResults",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "order",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowExecutions"
                }
              }
            },
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "400 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "404 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "415": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "415 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "500 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "passthroughBehavior": "never",
          "requestTemplates": {
            "application/json": "#set($body = $input.path('$'))\n{\n    \"workflowId\": \"$input.params().path.workflowId\",\n#if( \"$!input.params().querystring.get('status')\" != \"\")\n    \"status\": [\n    #foreach( $status in $method.request.multivaluequerystring.status )\n        \"$status\"#if( $foreach.hasNext ),#end\n    #end\n    ],\n#end\n#if( \"$!input.params().querystring.get('sortBy')\" != \"\")\n    \"sortBy\": \"$input.params().querystring.get('sortBy')\",\n#end\n#if( \"$!input.params().querystring.get('order')\" != \"\")\n    \"order\": \"$input.params().querystring.get('order')\",\n#end\n#if( \"$!input.params().querystring.get('maxResults')\" != \"\")\n    \"maxResults\": $input.params().querystring.get('maxResults'),\n#end\n#if( \"$!input.params().querystring.get('nextToken')\" != \"\")\n    \"nextToken\": \"$input.params().querystring.get('nextToken')\",\n#end\n    \"oauthClientId\": \"$context.authorizer.claims.client_id\",\n    \"oauthSubId\": \"$context.authorizer.claims.sub\"\n}\n"
          },
          "responses": {
            "^\\[BadRequest\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "400"
            },
            "^\\[InternalServerError\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "500"
            },
            "^\\[NotFound\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "404"
            },
            "^\\[UnsupportedMediaType\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "415"
            },
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "$input.json('$')\n"
              },
              "statusCode": "200"
            }
          },
          "type": "aws",
          "uri": ""
        },
        "x-amazon-apigateway-request-validator": ""
      },
      "options": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Empty"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            },
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\n  \"statusCode\": 200\n}\n"
          },
          "responses": {
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Methods": "'GET,POST,OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "statusCode": "200"
            }
          },
          "type": "mock"
        }
      },
      "post": {
        "parameters": [
          {
            "in": "header",
            "name": "Content-Type",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "workflowId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostWorkflowExecutions"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowExecution"
                }
              }
            },
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "400 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "404 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "415": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "415 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "500 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "passthroughBehavior": "never",
          "requestTemplates": {
            "application/json": "{\n        \"oauthClientId\": \"$context.authorizer.claims.client_id\",\n        \"oauthSubId\": \"$context.authorizer.claims.sub\",\n        \"workflowId\": \"$input.params().path.workflowId\",\n        \"input\": $input.json('$.input')\n    }\n"
          },
          "responses": {
            "^\\[BadRequest\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "400"
            },
            "^\\[InternalServerError\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "500"
            },
            "^\\[NotFound\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "404"
            },
            "^\\[UnsupportedMediaType\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "415"
            },
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "$input.json('$')\n"
              },
              "statusCode": "200"
            }
          },
          "type": "aws",
          "uri": ""
        },
        "x-amazon-apigateway-request-validator": ""
      }
    },
    "/workflows/{workflowId}/executions/{executionId}": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "executionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "workflowId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowExecution"
                }
              }
            },
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "400 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "404 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "415": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "415 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "500 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "passthroughBehavior": "never",
          "requestTemplates": {
            "application/json": "{\n    \"oauthClientId\": \"$context.authorizer.claims.client_id\",\n    \"oauthSubId\": \"$context.authorizer.claims.sub\",\n    \"workflowId\": \"$input.params().path.workflowId\",\n    \"executionId\": \"$input.params().path.executionId\"\n}\n"
          },
          "responses": {
            "^\\[BadRequest\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "400"
            },
            "^\\[InternalServerError\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "500"
            },
            "^\\[NotFound\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "404"
            },
            "^\\[UnsupportedMediaType\\].*": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($error = $input.path('$'))\n{\n    \"message\": \"$error.errorMessage\"\n}\n"
              },
              "statusCode": "415"
            },
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "$input.json('$')\n"
              },
              "statusCode": "200"
            }
          },
          "type": "aws",
          "uri": ""
        },
        "x-amazon-apigateway-request-validator": ""
      },
      "options": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Empty"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            },
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "passthroughBehavior": "when_no_match",
          "requestTemplates": {
            "application/json": "{\n  \"statusCode\": 200\n}\n"
          },
          "responses": {
            "default": {
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Methods": "'DELETE,OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "statusCode": "200"
            }
          },
          "type": "mock"
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Asset": {
        "additionalProperties": false,
        "properties": {
          "assetId": {
            "pattern": "^las:asset:[a-f0-9]{32}$",
            "type": "string"
          },
          "content": {
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              null
            ]
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              null
            ]
          }
        },
        "required": [
          "assetId",
          "description",
          "name"
        ],
        "title": "asset",
        "type": "object"
      },
      "Assets": {
        "additionalProperties": false,
        "properties": {
          "assets": {
            "items": {
              "additionalProperties": false,
              "properties": {
                "assetId": {
                  "pattern": "^las:asset:[a-f0-9]{32}$",
                  "type": "string"
                },
                "content": {
                  "minLength": 1,
                  "type": "string"
                },
                "description": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    null
                  ]
                },
                "name": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    null
                  ]
                }
              },
              "required": [
                "assetId",
                "description",
                "name"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "nextToken": {
            "anyOf": [
              {
                "type": "string"
              },
              null
            ]
          }
        },
        "required": [
          "assets"
        ],
        "title": "assets",
        "type": "object"
      },
      "Batch": {
        "additionalProperties": false,
        "properties": {
          "batchId": {
            "pattern": "^las:batch:[a-f0-9]{32}$",
            "type": "string"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              null
            ]
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              null
            ]
          }
        },
        "required": [
          "batchId",
          "description",
          "name"
        ],
        "title": "batch",
        "type": "object"
      },
      "Document": {
        "additionalProperties": false,
        "properties": {
          "batchId": {
            "pattern": "^las:batch:[a-f0-9]{32}$",
            "type": "string"
          },
          "consentId": {
            "pattern": "^las:consent:[a-f0-9]{32}$",
            "type": "string"
          },
          "content": {
            "minLength": 1,
            "type": "string"
          },
          "contentType": {
            "enum": [
              "application/pdf",
              "image/jpeg"
            ],
            "type": "string"
          },
          "documentId": {
            "pattern": "^las:document:[a-f0-9]{32}$",
            "type": "string"
          },
          "groundTruth": {
            "items": {
              "additionalProperties": false,
              "properties": {
                "label": {
                  "maxLength": 36,
                  "minLength": 1,
                  "pattern": "^[0-9A-Za-z_]+$",
                  "type": "string"
                },
                "value": {
                  "anyOf": [
                    {
                      "maxLength": 64,
                      "minLength": 1,
                      "type": "string"
                    },
                    null,
                    {
                      "type": "boolean"
                    }
                  ]
                }
              },
              "required": [
                "label",
                "value"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "inferenceTime": {
            "minimum": 0,
            "type": "number"
          },
          "predictions": {
            "items": {
              "additionalProperties": false,
              "properties": {
                "confidence": {
                  "maximum": 1,
                  "minimum": 0,
                  "type": "number"
                },
                "label": {
                  "maxLength": 36,
                  "minLength": 1,
                  "pattern": "^[0-9A-Za-z_]+$",
                  "type": "string"
                },
                "value": {
                  "anyOf": [
                    {
                      "maxLength": 64,
                      "minLength": 1,
                      "type": "string"
                    },
                    null
                  ]
                }
              },
              "required": [
                "confidence",
                "label",
                "value"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "updated": {
            "minimum": 1,
            "type": "integer"
          }
        },
        "required": [
          "contentType",
          "documentId"
        ],
        "title": "document",
        "type": "object"
      },
      "Documents": {
        "additionalProperties": false,
        "properties": {
          "batchId": {
            "items": {
              "pattern": "^las:batch:[a-f0-9]{32}$",
              "type": "string"
            },
            "type": "array"
          },
          "consentId": {
            "items": {
              "pattern": "^las:consent:[a-f0-9]{32}$",
              "type": "string"
            },
            "type": "array"
          },
          "documents": {
            "items": {
              "additionalProperties": false,
              "properties": {
                "batchId": {
                  "pattern": "^las:batch:[a-f0-9]{32}$",
                  "type": "string"
                },
                "consentId": {
                  "pattern": "^las:consent:[a-f0-9]{32}$",
                  "type": "string"
                },
                "content": {
                  "minLength": 1,
                  "type": "string"
                },
                "contentType": {
                  "enum": [
                    "application/pdf",
                    "image/jpeg"
                  ],
                  "type": "string"
                },
                "documentId": {
                  "pattern": "^las:document:[a-f0-9]{32}$",
                  "type": "string"
                },
                "groundTruth": {
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "label": {
                        "maxLength": 36,
                        "minLength": 1,
                        "pattern": "^[0-9A-Za-z_]+$",
                        "type": "string"
                      },
                      "value": {
                        "anyOf": [
                          {
                            "maxLength": 64,
                            "minLength": 1,
                            "type": "string"
                          },
                          null,
                          {
                            "type": "boolean"
                          }
                        ]
                      }
                    },
                    "required": [
                      "label",
                      "value"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "inferenceTime": {
                  "minimum": 0,
                  "type": "number"
                },
                "predictions": {
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "confidence": {
                        "maximum": 1,
                        "minimum": 0,
                        "type": "number"
                      },
                      "label": {
                        "maxLength": 36,
                        "minLength": 1,
                        "pattern": "^[0-9A-Za-z_]+$",
                        "type": "string"
                      },
                      "value": {
                        "anyOf": [
                          {
                            "maxLength": 64,
                            "minLength": 1,
                            "type": "string"
                          },
                          null
                        ]
                      }
                    },
                    "required": [
                      "confidence",
                      "label",
                      "value"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "updated": {
                  "minimum": 1,
                  "type": "integer"
                }
              },
              "required": [
                "contentType",
                "documentId"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "nextToken": {
            "anyOf": [
              {
                "type": "string"
              },
              null
            ]
          }
        },
        "required": [
          "documents"
        ],
        "title": "documents",
        "type": "object"
      },
      "Empty": {
        "title": "Empty Schema",
        "type": "object"
      },
      "Error": {
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "title": "Error Schema",
        "type": "object"
      },
      "Log": {
        "additionalProperties": false,
        "properties": {
          "events": {
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "logId": {
            "pattern": "^las:log:[a-f0-9]{32}$",
            "type": "string"
          },
          "transitionId": {
            "anyOf": [
              {
                "anyOf": [
                  {
                    "pattern": "^las:transition:[a-f0-9]{32}$",
                    "type": "string"
                  },
                  {
                    "pattern": "^las:transition:commons-[0-9A-Za-z-]+$",
                    "type": "string"
                  }
                ]
              },
              null
            ]
          }
        },
        "required": [
          "events",
          "logId"
        ],
        "title": "log",
        "type": "object"
      },
      "Models": {
        "additionalProperties": false,
        "properties": {
          "models": {
            "items": {
              "additionalProperties": false,
              "properties": {
                "description": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    null
                  ]
                },
                "height": {
                  "type": "integer"
                },
                "modelId": {
                  "pattern": "^las:model:[0-9A-Za-z_]+$",
                  "type": "string"
                },
                "name": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    null
                  ]
                },
                "width": {
                  "type": "integer"
                }
              },
              "required": [
                "description",
                "height",
                "modelId",
                "name",
                "width"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "nextToken": {
            "anyOf": [
              {
                "type": "string"
              },
              null
            ]
          }
        },
        "required": [
          "models"
        ],
        "title": "models",
        "type": "object"
      },
      "PatchAssetId": {
        "additionalProperties": false,
        "minProperties": 1,
        "properties": {
          "content": {
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              null
            ]
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              null
            ]
          }
        },
        "title": "PATCH /assets/assetId",
        "type": "object"
      },
      "PatchDocumentId": {
        "additionalProperties": false,
        "properties": {
          "groundTruth": {
            "items": {
              "additionalProperties": false,
              "properties": {
                "label": {
                  "maxLength": 36,
                  "minLength": 1,
                  "pattern": "^[0-9A-Za-z_]+$",
                  "type": "string"
                },
                "value": {
                  "anyOf": [
                    {
                      "maxLength": 64,
                      "minLength": 1,
                      "type": "string"
                    },
                    null,
                    {
                      "type": "boolean"
                    }
                  ]
                }
              },
              "required": [
                "label",
                "value"
              ],
              "type": "object"
            },
            "type": "array"
          }
        },
        "required": [
          "groundTruth"
        ],
        "title": "PATCH /documents/{documentId}",
        "type": "object"
      },
      "PatchSecretId": {
        "additionalProperties": false,
        "minProperties": 1,
        "properties": {
          "data": {
            "type": "object"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              null
            ]
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              null
            ]
          }
        },
        "title": "PATCH /secrets/{secretId}",
        "type": "object"
      },
      "PatchTransistionExecutionId": {
        "additionalProperties": false,
        "anyOf": [
          {
            "properties": {
              "status": {
                "enum": [
                  "succeeded"
                ],
                "type": "string"
              }
            },
            "type": "object"
          },
          {
            "properties": {
              "status": {
                "enum": [
                  "failed",
                  "rejected",
                  "retry"
                ],
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "properties": {
          "error": {
            "additionalProperties": false,
            "properties": {
              "message": {
                "type": "string"
              }
            },
            "required": [
              "message"
            ],
            "type": "object"
          },
          "output": {
            "type": "object"
          },
          "status": {
            "type": "string"
          }
        },
        "title": "PATCH transitions/{transitionId}/executions/{executionId}",
        "type": "object"
      },
      "PatchTransitionId": {
        "additionalProperties": false,
        "minProperties": 1,
        "properties": {
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              null
            ]
          },
          "inputJsonSchema": {
            "type": "object"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              null
            ]
          },
          "outputJsonSchema": {
            "type": "object"
          }
        },
        "title": "PATCH /transitions/{transitionId}",
        "type": "object"
      },
      "PatchWorkflowId": {
        "additionalProperties": false,
        "minProperties": 1,
        "properties": {
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              null
            ]
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              null
            ]
          }
        },
        "title": "PATCH /workflows/{workflowId}",
        "type": "object"
      },
      "PostAssets": {
        "additionalProperties": false,
        "properties": {
          "content": {
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              null
            ]
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              null
            ]
          }
        },
        "required": [
          "content"
        ],
        "title": "POST /assets",
        "type": "object"
      },
      "PostBatches": {
        "additionalProperties": false,
        "properties": {
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              null
            ]
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              null
            ]
          }
        },
        "title": "POST /batches",
        "type": "object"
      },
      "PostDocuments": {
        "additionalProperties": false,
        "properties": {
          "batchId": {
            "pattern": "^las:batch:[a-f0-9]{32}$",
            "type": "string"
          },
          "consentId": {
            "pattern": "^las:consent:[a-f0-9]{32}$",
            "type": "string"
          },
          "content": {
            "minLength": 1,
            "type": "string"
          },
          "contentType": {
            "enum": [
              "application/pdf",
              "image/jpeg"
            ],
            "type": "string"
          },
          "groundTruth": {
            "items": {
              "additionalProperties": false,
              "properties": {
                "label": {
                  "maxLength": 36,
                  "minLength": 1,
                  "pattern": "^[0-9A-Za-z_]+$",
                  "type": "string"
                },
                "value": {
                  "anyOf": [
                    {
                      "maxLength": 64,
                      "minLength": 1,
                      "type": "string"
                    },
                    null,
                    {
                      "type": "boolean"
                    }
                  ]
                }
              },
              "required": [
                "label",
                "value"
              ],
              "type": "object"
            },
            "type": "array"
          }
        },
        "required": [
          "content",
          "contentType"
        ],
        "title": "POST /documents",
        "type": "object"
      },
      "PostPredictions": {
        "additionalProperties": false,
        "properties": {
          "autoRotate": {
            "type": "boolean"
          },
          "documentId": {
            "pattern": "^las:document:[a-f0-9]{32}$",
            "type": "string"
          },
          "maxPages": {
            "maximum": 3,
            "minimum": 1,
            "type": "integer"
          },
          "modelId": {
            "pattern": "^las:model:[0-9A-Za-z_]+$",
            "type": "string"
          }
        },
        "required": [
          "documentId",
          "modelId"
        ],
        "title": "POST /predictions",
        "type": "object"
      },
      "PostSecrets": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "type": "object"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              null
            ]
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              null
            ]
          }
        },
        "required": [
          "data"
        ],
        "title": "POST /secrets",
        "type": "object"
      },
      "PostTransitionExecution": {
        "title": "POST /transitions/{transitionId}/executions",
        "type": "object"
      },
      "PostTransitions": {
        "additionalProperties": false,
        "properties": {
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              null
            ]
          },
          "inputJsonSchema": {
            "type": "object"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              null
            ]
          },
          "outputJsonSchema": {
            "type": "object"
          },
          "parameters": {
            "anyOf": [
              {
                "additionalProperties": false,
                "properties": {
                  "cpu": {
                    "enum": [
                      256
                    ],
                    "type": "integer"
                  },
                  "environment": {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  "environmentSecrets": {
                    "items": {
                      "pattern": "^las:secret:[a-f0-9]{32}$",
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "imageUrl": {
                    "type": "string"
                  },
                  "memory": {
                    "enum": [
                      512,
                      1024,
                      2048
                    ],
                    "type": "integer"
                  },
                  "secretId": {
                    "pattern": "^las:secret:[a-f0-9]{32}$",
                    "type": "string"
                  }
                },
                "required": [
                  "imageUrl"
                ],
                "type": "object"
              },
              {
                "additionalProperties": false,
                "properties": {
                  "assets": {
                    "additionalProperties": true,
                    "properties": {
                      "jsRemoteComponent": {
                        "pattern": "^las:asset:[a-f0-9]{32}$",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            ]
          },
          "transitionType": {
            "enum": [
              "docker",
              "manual"
            ],
            "type": "string"
          }
        },
        "required": [
          "transitionType"
        ],
        "title": "POST /transitions",
        "type": "object"
      },
      "PostUsers": {
        "additionalProperties": false,
        "properties": {
          "email": {
            "pattern": "^[A-Za-z0-9][-+._A-Za-z0-9]*@([A-Za-z0-9]+\\.)+[A-Za-z]{2,}$",
            "type": "string"
          }
        },
        "required": [
          "email"
        ],
        "title": "POST /users",
        "type": "object"
      },
      "PostWorkflowExecutions": {
        "additionalProperties": false,
        "properties": {
          "input": {
            "type": "object"
          }
        },
        "required": [
          "input"
        ],
        "title": "POST /workflows/{workflowId}/executions",
        "type": "object"
      },
      "PostWorkflows": {
        "additionalProperties": false,
        "properties": {
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              null
            ]
          },
          "errorConfig": {
            "additionalProperties": false,
            "properties": {
              "email": {
                "pattern": "^[A-Za-z0-9][-+._A-Za-z0-9]*@([A-Za-z0-9]+\\.)+[A-Za-z]{2,}$",
                "type": "string"
              }
            },
            "required": [
              "email"
            ],
            "type": "object"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              null
            ]
          },
          "specification": {
            "additionalProperties": false,
            "properties": {
              "definition": {
                "type": "object"
              },
              "language": {
                "enum": [
                  "ASL"
                ],
                "type": "string"
              },
              "version": {
                "enum": [
                  "1.0.0"
                ],
                "type": "string"
              }
            },
            "required": [
              "definition"
            ],
            "type": "object"
          }
        },
        "required": [
          "specification"
        ],
        "title": "POST /workflows",
        "type": "object"
      },
      "Prediction": {
        "additionalProperties": false,
        "properties": {
          "documentId": {
            "pattern": "^las:document:[a-f0-9]{32}$",
            "type": "string"
          },
          "inferenceTime": {
            "minimum": 0,
            "type": "number"
          },
          "modelId": {
            "pattern": "^las:model:[0-9A-Za-z_]+$",
            "type": "string"
          },
          "predictionId": {
            "pattern": "^las:prediction:[a-f0-9]{32}$",
            "type": "string"
          },
          "predictions": {
            "items": {
              "additionalProperties": false,
              "properties": {
                "confidence": {
                  "maximum": 1,
                  "minimum": 0,
                  "type": "number"
                },
                "label": {
                  "maxLength": 36,
                  "minLength": 1,
                  "pattern": "^[0-9A-Za-z_]+$",
                  "type": "string"
                },
                "value": {
                  "anyOf": [
                    {
                      "maxLength": 64,
                      "minLength": 1,
                      "type": "string"
                    },
                    null
                  ]
                }
              },
              "required": [
                "confidence",
                "label",
                "value"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "timestamp": {
            "minimum": 1,
            "type": "integer"
          }
        },
        "required": [
          "documentId",
          "inferenceTime",
          "modelId",
          "predictionId",
          "predictions",
          "timestamp"
        ],
        "title": "prediction",
        "type": "object"
      },
      "Secret": {
        "additionalProperties": false,
        "properties": {
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              null
            ]
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              null
            ]
          },
          "secretId": {
            "pattern": "^las:secret:[a-f0-9]{32}$",
            "type": "string"
          }
        },
        "required": [
          "description",
          "name",
          "secretId"
        ],
        "title": "secret",
        "type": "object"
      },
      "Secrets": {
        "additionalProperties": false,
        "properties": {
          "nextToken": {
            "anyOf": [
              {
                "type": "string"
              },
              null
            ]
          },
          "secrets": {
            "items": {
              "additionalProperties": false,
              "properties": {
                "description": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    null
                  ]
                },
                "name": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    null
                  ]
                },
                "secretId": {
                  "pattern": "^las:secret:[a-f0-9]{32}$",
                  "type": "string"
                }
              },
              "required": [
                "description",
                "name",
                "secretId"
              ],
              "type": "object"
            },
            "type": "array"
          }
        },
        "required": [
          "secrets"
        ],
        "title": "secrets",
        "type": "object"
      },
      "Transition": {
        "additionalProperties": false,
        "properties": {
          "assets": {
            "additionalProperties": true,
            "properties": {
              "jsRemoteComponent": {
                "pattern": "^las:asset:[a-f0-9]{32}$",
                "type": "string"
              }
            },
            "type": "object"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              null
            ]
          },
          "inputJsonSchema": {
            "type": "object"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              null
            ]
          },
          "outputJsonSchema": {
            "type": "object"
          },
          "parameters": {
            "anyOf": [
              {
                "type": "object"
              },
              null
            ]
          },
          "transitionId": {
            "anyOf": [
              {
                "pattern": "^las:transition:[a-f0-9]{32}$",
                "type": "string"
              },
              {
                "pattern": "^las:transition:commons-[0-9A-Za-z-]+$",
                "type": "string"
              }
            ]
          },
          "transitionType": {
            "type": "string"
          }
        },
        "required": [
          "description",
          "name",
          "transitionId",
          "transitionType"
        ],
        "title": "transition",
        "type": "object"
      },
      "TransitionExecution": {
        "additionalProperties": false,
        "properties": {
          "completedBy": {
            "anyOf": [
              {
                "type": "string"
              },
              null
            ]
          },
          "endTime": {
            "anyOf": [
              {
                "pattern": "^[0-9]{4}-?[0-9]{2}-?[0-9]{2} ?[0-9]{2}:?[0-9]{2}:?[0-9]{2}.?[0-9]{6}",
                "type": "string"
              },
              null
            ]
          },
          "executionId": {
            "pattern": "^las:transition-execution:[a-f0-9]{32}$",
            "type": "string"
          },
          "input": {
            "anyOf": [
              {
                "type": "object"
              },
              null
            ]
          },
          "logId": {
            "anyOf": [
              {
                "pattern": "^las:log:[a-f0-9]{32}$",
                "type": "string"
              },
              null
            ]
          },
          "startTime": {
            "anyOf": [
              {
                "pattern": "^[0-9]{4}-?[0-9]{2}-?[0-9]{2} ?[0-9]{2}:?[0-9]{2}:?[0-9]{2}.?[0-9]{6}",
                "type": "string"
              },
              null
            ]
          },
          "status": {
            "enum": [
              "running",
              "succeeded",
              "failed",
              "rejected",
              "retry"
            ],
            "type": "string"
          },
          "transitionId": {
            "anyOf": [
              {
                "pattern": "^las:transition:[a-f0-9]{32}$",
                "type": "string"
              },
              {
                "pattern": "^las:transition:commons-[0-9A-Za-z-]+$",
                "type": "string"
              }
            ]
          }
        },
        "required": [
          "completedBy",
          "executionId",
          "input",
          "status",
          "transitionId"
        ],
        "title": "transition-execution",
        "type": "object"
      },
      "TransitionExecutions": {
        "additionalProperties": false,
        "properties": {
          "executions": {
            "items": {
              "additionalProperties": false,
              "properties": {
                "completedBy": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    null
                  ]
                },
                "endTime": {
                  "anyOf": [
                    {
                      "pattern": "^[0-9]{4}-?[0-9]{2}-?[0-9]{2} ?[0-9]{2}:?[0-9]{2}:?[0-9]{2}.?[0-9]{6}",
                      "type": "string"
                    },
                    null
                  ]
                },
                "executionId": {
                  "pattern": "^las:transition-execution:[a-f0-9]{32}$",
                  "type": "string"
                },
                "input": {
                  "anyOf": [
                    {
                      "type": "object"
                    },
                    null
                  ]
                },
                "logId": {
                  "anyOf": [
                    {
                      "pattern": "^las:log:[a-f0-9]{32}$",
                      "type": "string"
                    },
                    null
                  ]
                },
                "startTime": {
                  "anyOf": [
                    {
                      "pattern": "^[0-9]{4}-?[0-9]{2}-?[0-9]{2} ?[0-9]{2}:?[0-9]{2}:?[0-9]{2}.?[0-9]{6}",
                      "type": "string"
                    },
                    null
                  ]
                },
                "status": {
                  "enum": [
                    "running",
                    "succeeded",
                    "failed",
                    "rejected",
                    "retry"
                  ],
                  "type": "string"
                },
                "transitionId": {
                  "anyOf": [
                    {
                      "pattern": "^las:transition:[a-f0-9]{32}$",
                      "type": "string"
                    },
                    {
                      "pattern": "^las:transition:commons-[0-9A-Za-z-]+$",
                      "type": "string"
                    }
                  ]
                }
              },
              "required": [
                "completedBy",
                "executionId",
                "input",
                "status",
                "transitionId"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "nextToken": {
            "anyOf": [
              {
                "type": "string"
              },
              null
            ]
          },
          "status": {
            "items": {
              "enum": [
                "running",
                "succeeded",
                "failed",
                "rejected",
                "retry"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "transitionId": {
            "anyOf": [
              {
                "pattern": "^las:transition:[a-f0-9]{32}$",
                "type": "string"
              },
              {
                "pattern": "^las:transition:commons-[0-9A-Za-z-]+$",
                "type": "string"
              }
            ]
          }
        },
        "required": [
          "executions",
          "transitionId"
        ],
        "title": "transition-executions",
        "type": "object"
      },
      "Transitions": {
        "additionalProperties": false,
        "properties": {
          "nextToken": {
            "anyOf": [
              {
                "type": "string"
              },
              null
            ]
          },
          "transitionType": {
            "items": {
              "enum": [
                "docker",
                "manual"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "transitions": {
            "items": {
              "additionalProperties": false,
              "properties": {
                "assets": {
                  "additionalProperties": true,
                  "properties": {
                    "jsRemoteComponent": {
                      "pattern": "^las:asset:[a-f0-9]{32}$",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "description": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    null
                  ]
                },
                "inputJsonSchema": {
                  "type": "object"
                },
                "name": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    null
                  ]
                },
                "outputJsonSchema": {
                  "type": "object"
                },
                "parameters": {
                  "anyOf": [
                    {
                      "type": "object"
                    },
                    null
                  ]
                },
                "transitionId": {
                  "anyOf": [
                    {
                      "pattern": "^las:transition:[a-f0-9]{32}$",
                      "type": "string"
                    },
                    {
                      "pattern": "^las:transition:commons-[0-9A-Za-z-]+$",
                      "type": "string"
                    }
                  ]
                },
                "transitionType": {
                  "type": "string"
                }
              },
              "required": [
                "description",
                "name",
                "transitionId",
                "transitionType"
              ],
              "type": "object"
            },
            "type": "array"
          }
        },
        "required": [
          "transitions"
        ],
        "title": "transitions",
        "type": "object"
      },
      "User": {
        "additionalProperties": false,
        "properties": {
          "email": {
            "pattern": "^[A-Za-z0-9][-+._A-Za-z0-9]*@([A-Za-z0-9]+\\.)+[A-Za-z]{2,}$",
            "type": "string"
          },
          "userId": {
            "pattern": "^las:user:[a-f0-9]{32}$",
            "type": "string"
          }
        },
        "required": [
          "email",
          "userId"
        ],
        "title": "user",
        "type": "object"
      },
      "Users": {
        "additionalProperties": false,
        "properties": {
          "nextToken": {
            "anyOf": [
              {
                "type": "string"
              },
              null
            ]
          },
          "users": {
            "items": {
              "additionalProperties": false,
              "properties": {
                "email": {
                  "pattern": "^[A-Za-z0-9][-+._A-Za-z0-9]*@([A-Za-z0-9]+\\.)+[A-Za-z]{2,}$",
                  "type": "string"
                },
                "userId": {
                  "pattern": "^las:user:[a-f0-9]{32}$",
                  "type": "string"
                }
              },
              "required": [
                "email",
                "userId"
              ],
              "type": "object"
            },
            "type": "array"
          }
        },
        "required": [
          "users"
        ],
        "title": "users",
        "type": "object"
      },
      "Workflow": {
        "additionalProperties": false,
        "properties": {
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              null
            ]
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              null
            ]
          },
          "workflowId": {
            "pattern": "^las:workflow:[a-f0-9]{32}$",
            "type": "string"
          }
        },
        "required": [
          "description",
          "name",
          "workflowId"
        ],
        "title": "workflow",
        "type": "object"
      },
      "WorkflowExecution": {
        "additionalProperties": false,
        "properties": {
          "completedBy": {
            "items": {
              "anyOf": [
                {
                  "pattern": "^las:user:[a-f0-9]{32}$",
                  "type": "string"
                },
                {
                  "pattern": "^las:app-client:[a-f0-9]{32}$",
                  "type": "string"
                }
              ]
            },
            "type": "array"
          },
          "endTime": {
            "anyOf": [
              {
                "pattern": "^[0-9]{4}-?[0-9]{2}-?[0-9]{2} ?[0-9]{2}:?[0-9]{2}:?[0-9]{2}.?[0-9]{6}",
                "type": "string"
              },
              null
            ]
          },
          "executionId": {
            "pattern": "^las:workflow-execution:[a-f0-9]{32}$",
            "type": "string"
          },
          "input": {
            "anyOf": [
              {
                "type": "object"
              },
              null
            ]
          },
          "output": {
            "anyOf": [
              {
                "type": "object"
              },
              null
            ]
          },
          "startTime": {
            "anyOf": [
              {
                "pattern": "^[0-9]{4}-?[0-9]{2}-?[0-9]{2} ?[0-9]{2}:?[0-9]{2}:?[0-9]{2}.?[0-9]{6}",
                "type": "string"
              },
              null
            ]
          },
          "status": {
            "enum": [
              "running",
              "succeeded",
              "failed",
              "rejected",
              "retry"
            ],
            "type": "string"
          },
          "transitionExecutions": {
            "anyOf": [
              {
                "type": "object"
              },
              null
            ]
          },
          "workflowId": {
            "pattern": "^las:workflow:[a-f0-9]{32}$",
            "type": "string"
          }
        },
        "required": [
          "endTime",
          "executionId",
          "input",
          "output",
          "startTime",
          "status",
          "transitionExecutions",
          "workflowId"
        ],
        "title": "workflow-execution",
        "type": "object"
      },
      "WorkflowExecutions": {
        "additionalProperties": false,
        "properties": {
          "executions": {
            "items": {
              "additionalProperties": false,
              "properties": {
                "completedBy": {
                  "items": {
                    "anyOf": [
                      {
                        "pattern": "^las:user:[a-f0-9]{32}$",
                        "type": "string"
                      },
                      {
                        "pattern": "^las:app-client:[a-f0-9]{32}$",
                        "type": "string"
                      }
                    ]
                  },
                  "type": "array"
                },
                "endTime": {
                  "anyOf": [
                    {
                      "pattern": "^[0-9]{4}-?[0-9]{2}-?[0-9]{2} ?[0-9]{2}:?[0-9]{2}:?[0-9]{2}.?[0-9]{6}",
                      "type": "string"
                    },
                    null
                  ]
                },
                "executionId": {
                  "pattern": "^las:workflow-execution:[a-f0-9]{32}$",
                  "type": "string"
                },
                "input": {
                  "anyOf": [
                    {
                      "type": "object"
                    },
                    null
                  ]
                },
                "output": {
                  "anyOf": [
                    {
                      "type": "object"
                    },
                    null
                  ]
                },
                "startTime": {
                  "anyOf": [
                    {
                      "pattern": "^[0-9]{4}-?[0-9]{2}-?[0-9]{2} ?[0-9]{2}:?[0-9]{2}:?[0-9]{2}.?[0-9]{6}",
                      "type": "string"
                    },
                    null
                  ]
                },
                "status": {
                  "enum": [
                    "running",
                    "succeeded",
                    "failed",
                    "rejected",
                    "retry"
                  ],
                  "type": "string"
                },
                "transitionExecutions": {
                  "anyOf": [
                    {
                      "type": "object"
                    },
                    null
                  ]
                },
                "workflowId": {
                  "pattern": "^las:workflow:[a-f0-9]{32}$",
                  "type": "string"
                }
              },
              "required": [
                "endTime",
                "executionId",
                "input",
                "output",
                "startTime",
                "status",
                "transitionExecutions",
                "workflowId"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "nextToken": {
            "anyOf": [
              {
                "type": "string"
              },
              null
            ]
          },
          "order": {
            "enum": [
              "ascending",
              "descending"
            ],
            "type": "string"
          },
          "sortBy": {
            "enum": [
              "startTime",
              "endTime"
            ],
            "type": "string"
          },
          "status": {
            "items": {
              "enum": [
                "running",
                "succeeded",
                "failed",
                "rejected",
                "retry"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "workflowId": {
            "pattern": "^las:workflow:[a-f0-9]{32}$",
            "type": "string"
          }
        },
        "required": [
          "executions",
          "workflowId"
        ],
        "title": "workflow-executions",
        "type": "object"
      },
      "Workflows": {
        "additionalProperties": false,
        "properties": {
          "nextToken": {
            "anyOf": [
              {
                "type": "string"
              },
              null
            ]
          },
          "workflows": {
            "items": {
              "additionalProperties": false,
              "properties": {
                "description": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    null
                  ]
                },
                "name": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    null
                  ]
                },
                "workflowId": {
                  "pattern": "^las:workflow:[a-f0-9]{32}$",
                  "type": "string"
                }
              },
              "required": [
                "description",
                "name",
                "workflowId"
              ],
              "type": "object"
            },
            "type": "array"
          }
        },
        "required": [
          "workflows"
        ],
        "title": "workflows",
        "type": "object"
      }
    },
    "securitySchemes": {}
  },
  "x-amazon-apigateway-request-validators": {}
}